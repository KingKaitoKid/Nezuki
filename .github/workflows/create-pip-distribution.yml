name: Release Pipeline for Main

on:
  pull_request:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write

jobs:
  # ✅ Step 1: Test Unitari
  test:
    name: Run Tests 
    runs-on: self-hosted
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install pytest pytest-mock

      - name: Run tests
        run: pytest --cov=nezuki --cov-report=term-missing


  # ✅ Step 2: Build e Publish su PyPI
  build-and-publish:
    name: Build & Publish Package
    needs: [test]
    runs-on: self-hosted
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install packaging tools
        run: pip install setuptools wheel twine

      - name: Build Package
        run: |
          rm -rf dist  # ✅ Pulisce la cartella dist prima di creare il pacchetto
          python setup.py sdist bdist_wheel

      - name: Upload Package to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
        run: |
          twine upload dist/*

  # ✅ Step 3: Approva la PR se tutto è passato
  auto-approve:
    name: Approving PR
    needs:
      - build-and-publish  # Approva solo se test e check-todo passano
    runs-on: self-hosted
    steps:
      - name: Approve PR
        uses: hmarr/auto-approve-action@v3
        with:
          github-token: ${{ secrets.NEZUKIINFRABOT }}

  # ✅ Step 4: Merge automatico su develop
  auto-merge:
    name: Merging to Develop
    needs:
      - auto-approve

    runs-on: self-hosted
    steps:
      - name: Enable Auto Merge
        run: gh pr merge --auto --squash "$PR_URL"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_URL: ${{ github.event.pull_request.html_url }}